# Generated by Django 3.0.7 on 2020-09-02 18:19

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import experimenter.experiments.models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0002_remove_non_firefox_locales'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('experiments', '0108_auto_20200817_1534'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExperimentCore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.TextField(blank=True, default='', null=True)),
                ('related_work', models.TextField(blank=True, default='', null=True)),
                ('message_type', models.CharField(blank=True, choices=[('cfr', 'CFR'), ('about:welcome', 'about:welcome')], max_length=255, null=True)),
                ('message_template', models.CharField(blank=True, choices=[('cfr_doorhanger', 'CFR Doorhanger'), ('cfr_urlbar_chiclet', 'CFR Urlbar Chiclet'), ('milestone_message', 'Milestone Message')], max_length=255, null=True)),
                ('rollout_playbook', models.CharField(blank=True, choices=[(None, 'Rollout Playbook'), ('low_risk', 'Low Risk Schedule'), ('high_risk', 'High Risk Schedule'), ('marketing', 'Marketing Launch Schedule'), ('custom', 'Custom Schedule')], max_length=255, null=True)),
                ('addon_experiment_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('addon_release_url', models.URLField(blank=True, max_length=400, null=True)),
                ('is_branched_addon', models.BooleanField(default=False)),
                ('pref_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pref_type', models.CharField(blank=True, choices=[(None, 'Firefox Pref Type'), ('boolean', 'boolean'), ('integer', 'integer'), ('string', 'string'), ('json string', 'json string')], max_length=255, null=True)),
                ('pref_branch', models.CharField(blank=True, choices=[(None, 'Firefox Pref Branch'), ('default', 'default'), ('user', 'user')], max_length=255, null=True)),
                ('pref_value', models.TextField(blank=True, null=True)),
                ('is_multi_pref', models.BooleanField(default=False)),
                ('rollout_type', models.CharField(choices=[('pref', 'Pref Rollout'), ('addon', 'Add-On Rollout')], default='pref', max_length=255)),
                ('population_percent', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, null=True)),
                ('total_enrolled_clients', models.PositiveIntegerField(blank=True, null=True)),
                ('client_matching', models.TextField(blank=True, default='Prefs:\n\nExperiments:\n\nAny additional filters:\n    ', null=True)),
                ('platforms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=experimenter.experiments.models.default_all_platforms, null=True, size=None)),
                ('windows_versions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('profile_age', models.CharField(blank=True, choices=[('All Profiles', 'All Profiles'), ('New Profiles Only', 'New Profiles Only'), ('Existing Profiles Only', 'Existing Profiles Only')], default='All Profiles', max_length=255, null=True)),
                ('design', models.TextField(blank=True, default='What is the design of this delivery? Explain in detail.', null=True)),
                ('analysis', models.TextField(blank=True, default='We will measure <outcome> by an <increase/decrease/neutral> of <size> in <feature telemetry>.\nThere may be multiple leading indicator statements.\n\nOptional: We hypothesize the desired change will <increase/decrease/neutral> to the <core metric>.\n    ', null=True)),
                ('survey_required', models.BooleanField(default=False)),
                ('survey_urls', models.TextField(blank=True, null=True)),
                ('survey_instructions', models.TextField(blank=True, null=True)),
                ('engineering_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('normandy_id', models.PositiveIntegerField(blank=True, null=True)),
                ('other_normandy_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('data_science_issue_url', models.URLField(blank=True, null=True)),
                ('feature_bugzilla_url', models.URLField(blank=True, null=True)),
                ('risk_partner_related', models.NullBooleanField(default=None)),
                ('risk_brand', models.NullBooleanField(default=None)),
                ('risk_fast_shipped', models.NullBooleanField(default=None)),
                ('risk_confidential', models.NullBooleanField(default=None)),
                ('risk_release_population', models.NullBooleanField(default=None)),
                ('risk_revenue', models.NullBooleanField(default=None)),
                ('risk_data_category', models.NullBooleanField(default=None)),
                ('risk_external_team_impact', models.NullBooleanField(default=None)),
                ('risk_telemetry_data', models.NullBooleanField(default=None)),
                ('risk_ux', models.NullBooleanField(default=None)),
                ('risk_security', models.NullBooleanField(default=None)),
                ('risk_revision', models.NullBooleanField(default=None)),
                ('risk_technical', models.NullBooleanField(default=None)),
                ('risk_higher_risk', models.NullBooleanField(default=None)),
                ('risk_technical_description', models.TextField(blank=True, null=True)),
                ('risks', models.TextField(blank=True, null=True)),
                ('testing', models.TextField(blank=True, null=True)),
                ('test_builds', models.TextField(blank=True, null=True)),
                ('qa_status', models.TextField(blank=True, null=True)),
                ('review_science', models.NullBooleanField(default=None)),
                ('review_engineering', models.NullBooleanField(default=None)),
                ('review_qa_requested', models.NullBooleanField(default=None)),
                ('review_intent_to_ship', models.NullBooleanField(default=None)),
                ('review_bugzilla', models.NullBooleanField(default=None)),
                ('review_qa', models.NullBooleanField(default=None)),
                ('review_relman', models.NullBooleanField(default=None)),
                ('review_advisory', models.NullBooleanField(default=None)),
                ('review_legal', models.NullBooleanField(default=None)),
                ('review_ux', models.NullBooleanField(default=None)),
                ('review_security', models.NullBooleanField(default=None)),
                ('review_vp', models.NullBooleanField(default=None)),
                ('review_data_steward', models.NullBooleanField(default=None)),
                ('review_comms', models.NullBooleanField(default=None)),
                ('review_impacted_teams', models.NullBooleanField(default=None)),
                ('results_url', models.URLField(blank=True, null=True)),
                ('results_initial', models.TextField(blank=True, null=True)),
                ('results_lessons_learned', models.TextField(blank=True, null=True)),
                ('results_fail_to_launch', models.NullBooleanField(default=None)),
                ('results_recipe_errors', models.NullBooleanField(default=None)),
                ('results_restarts', models.NullBooleanField(default=None)),
                ('results_low_enrollment', models.NullBooleanField(default=None)),
                ('results_early_end', models.NullBooleanField(default=None)),
                ('results_no_usable_data', models.NullBooleanField(default=None)),
                ('results_failures_notes', models.TextField(blank=True, null=True)),
                ('results_changes_to_firefox', models.NullBooleanField(default=None)),
                ('results_data_for_hypothesis', models.NullBooleanField(default=None)),
                ('results_confidence', models.NullBooleanField(default=None)),
                ('results_measure_impact', models.NullBooleanField(default=None)),
                ('results_impact_notes', models.TextField(blank=True, null=True)),
                ('analysis_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzed_experiments_core', to=settings.AUTH_USER_MODEL)),
                ('countries', models.ManyToManyField(blank=True, to='base.Country')),
                ('experiment_ptr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Experiment')),
                ('locales', models.ManyToManyField(blank=True, to='base.Locale')),
            ],
        ),
    ]
