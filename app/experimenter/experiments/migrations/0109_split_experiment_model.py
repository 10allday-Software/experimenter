# Generated by Django 3.0.7 on 2020-09-02 18:19

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import experimenter.experiments.models


def copy_experiment_data(apps, schema_editor):
    Experiment = apps.get_model("experiments", "Experiment")
    ExperimentCore = apps.get_model("experiments", "ExperimentCore")
    experiment_core_fields = [
        f.name
        for f in ExperimentCore._meta.fields
        if f.name not in ["id", "experiment_ptr"]
    ]

    for experiment in Experiment.objects.all():
        data = {f: getattr(experiment, f) for f in experiment_core_fields}
        ExperimentCore.objects.create(experiment_ptr=experiment, **data)


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0002_remove_non_firefox_locales"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("experiments", "0108_auto_20200817_1534"),
    ]

    operations = [
        migrations.CreateModel(
            name="ExperimentCore",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "short_description",
                    models.TextField(blank=True, default="", null=True),
                ),
                ("related_work", models.TextField(blank=True, default="", null=True)),
                (
                    "message_type",
                    models.CharField(
                        blank=True,
                        choices=[("cfr", "CFR"), ("about:welcome", "about:welcome")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "message_template",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cfr_doorhanger", "CFR Doorhanger"),
                            ("cfr_urlbar_chiclet", "CFR Urlbar Chiclet"),
                            ("milestone_message", "Milestone Message"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rollout_playbook",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "Rollout Playbook"),
                            ("low_risk", "Low Risk Schedule"),
                            ("high_risk", "High Risk Schedule"),
                            ("marketing", "Marketing Launch Schedule"),
                            ("custom", "Custom Schedule"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "addon_experiment_id",
                    models.CharField(blank=True, max_length=255, null=True, unique=True),
                ),
                (
                    "addon_release_url",
                    models.URLField(blank=True, max_length=400, null=True),
                ),
                ("is_branched_addon", models.BooleanField(default=False)),
                ("pref_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "pref_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "Firefox Pref Type"),
                            ("boolean", "boolean"),
                            ("integer", "integer"),
                            ("string", "string"),
                            ("json string", "json string"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pref_branch",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "Firefox Pref Branch"),
                            ("default", "default"),
                            ("user", "user"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("pref_value", models.TextField(blank=True, null=True)),
                ("is_multi_pref", models.BooleanField(default=False)),
                (
                    "rollout_type",
                    models.CharField(
                        choices=[("pref", "Pref Rollout"), ("addon", "Add-On Rollout")],
                        default="pref",
                        max_length=255,
                    ),
                ),
                (
                    "population_percent",
                    models.DecimalField(
                        blank=True, decimal_places=4, default=0.0, max_digits=7, null=True
                    ),
                ),
                (
                    "total_enrolled_clients",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "client_matching",
                    models.TextField(
                        blank=True,
                        default="Prefs:\n\nExperiments:\n\nAny additional filters:\n    ",
                        null=True,
                    ),
                ),
                (
                    "platforms",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        blank=True,
                        default=experimenter.experiments.models.default_all_platforms,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "windows_versions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "profile_age",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("All Profiles", "All Profiles"),
                            ("New Profiles Only", "New Profiles Only"),
                            ("Existing Profiles Only", "Existing Profiles Only"),
                        ],
                        default="All Profiles",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "design",
                    models.TextField(
                        blank=True,
                        default="What is the design of this delivery? Explain in detail.",
                        null=True,
                    ),
                ),
                (
                    "analysis",
                    models.TextField(
                        blank=True,
                        default="We will measure <outcome> by an <increase/decrease/neutral> of <size> in <feature telemetry>.\nThere may be multiple leading indicator statements.\n\nOptional: We hypothesize the desired change will <increase/decrease/neutral> to the <core metric>.\n    ",
                        null=True,
                    ),
                ),
                ("survey_required", models.BooleanField(default=False)),
                ("survey_urls", models.TextField(blank=True, null=True)),
                ("survey_instructions", models.TextField(blank=True, null=True)),
                (
                    "engineering_owner",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("normandy_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "other_normandy_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), blank=True, null=True, size=None
                    ),
                ),
                ("data_science_issue_url", models.URLField(blank=True, null=True)),
                ("feature_bugzilla_url", models.URLField(blank=True, null=True)),
                ("risk_partner_related", models.NullBooleanField(default=None)),
                ("risk_brand", models.NullBooleanField(default=None)),
                ("risk_fast_shipped", models.NullBooleanField(default=None)),
                ("risk_confidential", models.NullBooleanField(default=None)),
                ("risk_release_population", models.NullBooleanField(default=None)),
                ("risk_revenue", models.NullBooleanField(default=None)),
                ("risk_data_category", models.NullBooleanField(default=None)),
                ("risk_external_team_impact", models.NullBooleanField(default=None)),
                ("risk_telemetry_data", models.NullBooleanField(default=None)),
                ("risk_ux", models.NullBooleanField(default=None)),
                ("risk_security", models.NullBooleanField(default=None)),
                ("risk_revision", models.NullBooleanField(default=None)),
                ("risk_technical", models.NullBooleanField(default=None)),
                ("risk_higher_risk", models.NullBooleanField(default=None)),
                ("risk_technical_description", models.TextField(blank=True, null=True)),
                ("risks", models.TextField(blank=True, null=True)),
                ("testing", models.TextField(blank=True, null=True)),
                ("test_builds", models.TextField(blank=True, null=True)),
                ("qa_status", models.TextField(blank=True, null=True)),
                ("review_science", models.NullBooleanField(default=None)),
                ("review_engineering", models.NullBooleanField(default=None)),
                ("review_qa_requested", models.NullBooleanField(default=None)),
                ("review_intent_to_ship", models.NullBooleanField(default=None)),
                ("review_bugzilla", models.NullBooleanField(default=None)),
                ("review_qa", models.NullBooleanField(default=None)),
                ("review_relman", models.NullBooleanField(default=None)),
                ("review_advisory", models.NullBooleanField(default=None)),
                ("review_legal", models.NullBooleanField(default=None)),
                ("review_ux", models.NullBooleanField(default=None)),
                ("review_security", models.NullBooleanField(default=None)),
                ("review_vp", models.NullBooleanField(default=None)),
                ("review_data_steward", models.NullBooleanField(default=None)),
                ("review_comms", models.NullBooleanField(default=None)),
                ("review_impacted_teams", models.NullBooleanField(default=None)),
                ("results_url", models.URLField(blank=True, null=True)),
                ("results_initial", models.TextField(blank=True, null=True)),
                ("results_lessons_learned", models.TextField(blank=True, null=True)),
                ("results_fail_to_launch", models.NullBooleanField(default=None)),
                ("results_recipe_errors", models.NullBooleanField(default=None)),
                ("results_restarts", models.NullBooleanField(default=None)),
                ("results_low_enrollment", models.NullBooleanField(default=None)),
                ("results_early_end", models.NullBooleanField(default=None)),
                ("results_no_usable_data", models.NullBooleanField(default=None)),
                ("results_failures_notes", models.TextField(blank=True, null=True)),
                ("results_changes_to_firefox", models.NullBooleanField(default=None)),
                ("results_data_for_hypothesis", models.NullBooleanField(default=None)),
                ("results_confidence", models.NullBooleanField(default=None)),
                ("results_measure_impact", models.NullBooleanField(default=None)),
                ("results_impact_notes", models.TextField(blank=True, null=True)),
                (
                    "analysis_owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyzed_experiments_core",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("countries", models.ManyToManyField(blank=True, to="base.Country")),
                (
                    "experiment_ptr",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="experiments.Experiment",
                    ),
                ),
                ("locales", models.ManyToManyField(blank=True, to="base.Locale")),
            ],
        ),
        migrations.AddField(
            model_name='experimentcore',
            name='type',
            field=models.CharField(choices=[('pref', 'Pref-Flip Experiment'), ('addon', 'Add-On Experiment'), ('generic', 'Generic Experiment'), ('rollout', 'Staged Rollout'), ('message', 'Message Router Content Experiment'), ('rapid', 'Rapid Experiment')], default='pref', max_length=255),
        ),
        migrations.RunPython(copy_experiment_data),
        migrations.RemoveField(
            model_name="experiment",
            name="addon_experiment_id",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="addon_release_url",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="analysis",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="analysis_owner",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="client_matching",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="countries",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="data_science_issue_url",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="design",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="engineering_owner",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="feature_bugzilla_url",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="is_branched_addon",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="is_multi_pref",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="locales",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="message_template",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="message_type",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="normandy_id",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="other_normandy_ids",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="platforms",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="population_percent",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="pref_branch",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="pref_name",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="pref_type",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="pref_value",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="profile_age",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="qa_status",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="related_work",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_changes_to_firefox",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_confidence",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_data_for_hypothesis",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_early_end",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_fail_to_launch",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_failures_notes",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_impact_notes",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_initial",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_lessons_learned",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_low_enrollment",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_measure_impact",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_no_usable_data",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_recipe_errors",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_restarts",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="results_url",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_advisory",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_bugzilla",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_comms",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_data_steward",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_engineering",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_impacted_teams",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_intent_to_ship",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_legal",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_qa",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_qa_requested",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_relman",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_science",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_security",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_ux",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="review_vp",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_brand",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_confidential",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_data_category",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_external_team_impact",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_fast_shipped",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_higher_risk",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_partner_related",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_release_population",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_revenue",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_revision",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_security",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_technical",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_technical_description",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_telemetry_data",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risk_ux",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="risks",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="rollout_playbook",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="rollout_type",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="survey_instructions",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="survey_required",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="survey_urls",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="test_builds",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="testing",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="total_enrolled_clients",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="windows_versions",
        ),
        migrations.RemoveField(
            model_name="experimentcore",
            name="id",
        ),
        migrations.RemoveField(
            model_name="experimentcore",
            name="short_description",
        ),
        migrations.AlterField(
            model_name="experimentcore",
            name="experiment_ptr",
            field=models.OneToOneField(
                auto_created=True,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                serialize=False,
                to="experiments.Experiment",
            ),
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="audience",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="features",
        ),
        migrations.RemoveField(
            model_name="experiment",
            name="rapid_type",
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='type',
        ),
        migrations.CreateModel(
            name="ExperimentRapid",
            fields=[
                (
                    "experiment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="experiments.Experiment",
                    ),
                ),
                (
                    "rapid_type",
                    models.CharField(
                        blank=True,
                        choices=[("cfr a/a", "Rapid CFR A/A Experiment")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "features",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("FEATURE 1", "FEATURE 1"),
                                ("FEATURE 2", "FEATURE 2"),
                            ],
                            max_length=255,
                            null=True,
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "audience",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AUDIENCE 1", "AUDIENCE 1"),
                            ("AUDIENCE 2", "AUDIENCE 2"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            bases=("experiments.experiment",),
        ),
        migrations.AlterField(
            model_name="experimentcore",
            name="analysis_owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analyzed_experiments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
            migrations.AlterModelOptions(
            name='experimentcore',
            options={'verbose_name': 'ExperimentCore', 'verbose_name_plural': 'ExperimentCores'},
        ),
        migrations.AlterModelOptions(
            name='experimentrapid',
            options={'verbose_name': 'ExperimentRapid', 'verbose_name_plural': 'ExperimentRapids'},
        ),
    ]
